apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'

def library = rootProject.ext.dependencies //依赖
def config = rootProject.ext.android //配置<
android {

    compileSdkVersion config.compileSdkVersion
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    defaultConfig {
        applicationId "com.base.app"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi','armeabi-v7a','arm64-v8a', 'x86'
            // , 'x86'
            //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a', 'x86'
        }
    }

    signingConfigs {
        release {
            try {
                storeFile file("./keystore/loes.jks")
                storePassword "asdfghjkl"
                keyAlias "loes"
                keyPassword "asdfghjkl"
            } catch (ex) {
                throw new Exception(ex.toString())
            }
        }

        debug {
            try {
                storeFile file("./keystore/loes.jks")
                storePassword "asdfghjkl"
                keyAlias "loes"
                keyPassword "asdfghjkl"
            } catch (ex) {
                throw new Exception(ex.toString())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    //打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def fileName="";
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {//如果是release包
                    fileName = "BaseApp.apk"
                } else if (variant.buildType.name.equals('debug')) {//如果是debug包
                    fileName = "BaseApp.apk"
                }
                outputFileName = fileName
            }
        }
    }

    flavorDimensions "version"
    productFlavors{
        O0 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE : 'O0']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation library.appcompat
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    //okhttp retrofit rxjava
    implementation library.retrofit
    implementation library.adapterrxjava
    implementation library.convertgson
    implementation library.okhttp3
    implementation library.okhttplogger
    implementation library.rxandroid
    implementation library.rxjava

    //butterKnife
    implementation library.butterknife
    annotationProcessor library.buterknifecompiler

    //glide
    api library.glide
    implementation 'jp.wasabeef:glide-transformations:4.0.0'

    //StatusBarUtil
//    implementation library.statusbarutil

    //    rxpermissions
    implementation library.rxpermissions

    //recyclerview和adapter封装
    implementation library.baserecyclerviewadapter
    implementation  library.smartrefreshlayout
    implementation library.smartrefreshheader
    implementation library.recyclerview
    //自动适配
    implementation library.autosize
    //eventBus
    implementation library.eventbus

    //dialog
    implementation library.mutlcolorloadingview

    // 状态栏
    implementation library.immersionbar
    // fragment快速实现（可选）
    implementation library.immersionbar_bar
    // kotlin扩展（可选）
    implementation library.immersionbar_ktx
    //Toast
    implementation library.Toasty

    //Dex超出方法数的限制
    implementation library.multidex
    //异常扑获
    implementation library.cockroach
    //轮播banner
    implementation library.banner

    //引导
    implementation 'com.github.huburt-Hu:NewbieGuide:v2.4.0'
    //textbanner
    implementation 'com.superluo:textbannerview:1.0.2'
    //agenView
    implementation "com.just.agentweb:agentweb:4.0.3-alpha@aar"

    //单选页
    implementation 'com.jacksen:supertaggroup:1.1'

    implementation 'me.zhouzhuo.zzhorizontalprogressbar:zz-horizontal-progressbar:1.1.0'//进度条
    //缩放图片
    implementation 'com.bm.photoview:library:1.4.1'
    implementation 'com.tencent.bugly:crashreport:3.3.3'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.700'

    implementation 'q.rorbin:badgeview:1.1.3'//角标

    implementation 'org.greenrobot:greendao:3.3.0'//数据库
    implementation 'com.twitter.sdk.android:twitter:3.1.1'//twitter分享

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.0.1')
    // Declare the dependency for the Analytics library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics'
}
repositories {
    mavenCentral()
}